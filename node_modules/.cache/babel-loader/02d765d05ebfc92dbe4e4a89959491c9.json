{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    isLogin: true\n  },\n  reducers: {\n    Login: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.isLogin = true;\n    },\n    logOut: state => {\n      state.isLogin = false;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","isLogin","reducers","Login","state","logOut","incrementByAmount","action","value","payload","increment","decrement","actions","reducer"],"sources":["C:/BlockChain/ecommerce/src/features/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    isLogin: true,\r\n  },\r\n  reducers: {\r\n    Login: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.isLogin = true;\r\n    },\r\n    logOut: state => {\r\n      state.isLogin = false;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    }\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,SADgC;EAEtCC,YAAY,EAAE;IACZC,OAAO,EAAE;EADG,CAFwB;EAKtCC,QAAQ,EAAE;IACRC,KAAK,EAAEC,KAAK,IAAI;MACd;MACA;MACA;MACA;MACAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;IACD,CAPO;IAQRI,MAAM,EAAED,KAAK,IAAI;MACfA,KAAK,CAACH,OAAN,GAAgB,KAAhB;IACD,CAVO;IAWRK,iBAAiB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;MACpCH,KAAK,CAACI,KAAN,IAAeD,MAAM,CAACE,OAAtB;IACD;EAbO;AAL4B,CAAD,CAAhC,C,CAsBP;;AACA,OAAO,MAAM;EAAEC,SAAF;EAAaC,SAAb;EAAwBL;AAAxB,IAA8CR,YAAY,CAACc,OAAjE;AAEP,eAAed,YAAY,CAACe,OAA5B"},"metadata":{},"sourceType":"module"}